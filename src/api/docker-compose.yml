version: "3.8"

services:
  # Elasticsearch (기존 설정 재사용)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: rag_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - rag_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI RAG 서버
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_api_server
    ports:
      - "8000:8000"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - PYTHONPATH=/app
    volumes:
      - ../core:/app/core:ro
      - ../utils:/app/utils:ro
      - ../../pdf:/app/pdf:ro
      - ../../data:/app/data:ro
      - ../../config:/app/config:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - rag_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama (선택적)
  ollama:
    image: ollama/ollama:latest
    container_name: rag_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Nginx (선택적 - 리버스 프록시)
  nginx:
    image: nginx:alpine
    container_name: rag_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rag-api
    networks:
      - rag_network
    restart: unless-stopped

volumes:
  elasticsearch_data:
    driver: local
  ollama_data:
    driver: local

networks:
  rag_network:
    driver: bridge
